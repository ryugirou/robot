<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="robot_name"/>
  <arg name="lidar"/>
  <arg name="manager_name"/>
  <arg name="nodelet_mode"/>
  <arg name="color"/>
  <arg name="x0" default="$(eval 4.66 if color=='blue' else 4.66)"/>
  <arg name="y0" default="$(eval 0.55 if color=='blue' else 0.55)"/>
  <arg name="yaw0" default="$(eval 0 if color=='blue' else 0)"/>
  <!-- TO DO:x0,yo,yaw0 for blue -->

  <include file="$(find pr)/config/machine/remote.machine"/>

  <group ns="$(arg robot_name)">

  <!-- Nodelet Manager -->
    <group if="$(eval nodelet_mode=='load')">
      <node pkg="nodelet" type="nodelet" name="$(arg manager_name)" args="manager" machine="robot"/>
    </group>

    <!-- CAN -->
    <node pkg="nodelet" type="nodelet" name="slcan_bridge" 
    args="$(arg nodelet_mode) can_plugins/SlcanBridge $(arg manager_name)" machine="robot"/>

    <node pkg="nodelet" type="nodelet" name="can_handler" 
    args="$(arg nodelet_mode) can_plugins/CanHandler $(arg manager_name)" machine="robot"/>

    <!--Motor Driver-->
    <node pkg="nodelet" type="nodelet" name="motor0" args="$(arg nodelet_mode) can_plugins/Md201xNode $(arg manager_name)" machine="robot">
      <param name="bid" type="string" value="5b0" />
      <remap from="motor0_cmd" to="beta/cmd"/>
    </node>
    <node pkg="nodelet" type="nodelet" name="motor1" args="$(arg nodelet_mode) can_plugins/Md201xNode $(arg manager_name)" machine="robot">
      <param name="bid" type="string" value="4e0" />
      <remap from="motor1_cmd" to="beta/cmd"/>
    </node>
    <node pkg="nodelet" type="nodelet" name="motor2" args="$(arg nodelet_mode) can_plugins/Md201xNode $(arg manager_name)" machine="robot">
      <param name="bid" type="string" value="608" />
      <remap from="motor2_cmd" to="beta/cmd"/>
    </node>
    <node pkg="nodelet" type="nodelet" name="motor3" args="$(arg nodelet_mode) can_plugins/Md201xNode $(arg manager_name)" machine="robot">
      <param name="bid" type="string" value="5b8" />
      <remap from="motor3_cmd" to="beta/cmd"/>
    </node>
    <node pkg="nodelet" type="nodelet" name="motor4" args="$(arg nodelet_mode) can_plugins/Md201xNode $(arg manager_name)" machine="robot">
      <param name="bid" type="string" value="60c" />
      <remap from="motor4_cmd" to="beta/cmd"/>
      <remap from="motor4_cmd_val" to="pass"/>
      <param name="ctrl_freq" value="5" />
    </node>
    <node pkg="nodelet" type="nodelet" name="motor5" args="$(arg nodelet_mode) can_plugins/Md201xNode $(arg manager_name)" machine="robot">
      <param name="bid" type="string" value="4d0" />
      <remap from="motor5_cmd" to="beta/cmd"/>
      <remap from="motor5_cmd_val" to="pass"/>
      <param name="ctrl_freq" value="5" />
    </node>
    <node pkg="nodelet" type="nodelet" name="motor6" args="$(arg nodelet_mode) can_plugins/Md201xNode $(arg manager_name)" machine="robot">
      <param name="bid" type="string" value="4a0" />
      <remap from="motor6_cmd" to="beta/cmd"/>
      <remap from="motor6_cmd_val" to="slide"/>
      <param name="ctrl_freq" value="5" />
    </node>
    <node pkg="nodelet" type="nodelet" name="motor7" args="$(arg nodelet_mode) can_plugins/Md201xNode $(arg manager_name)" machine="robot">
      <param name="bid" type="string" value="4b0" />
      <remap from="motor7_cmd" to="beta/cmd"/>
      <remap from="motor7_cmd_val" to="arm"/>
      <param name="ctrl_freq" value="5" />
    </node>

    <!--Solenoid_Driver-->  
    <node pkg="can_plugins" type="solenoid_driver_node" name="solenoid" machine="robot">
      <param name="bid" type="string" value="100" />
      <param name="name" value="solenoid"/>
      <remap from="solenoid_cmd" to="beta/cmd"/>
      <remap from="solenoid_order" to="solenoid"/>
    </node>

    <!-- publish odom to TF (later)-->
    <node pkg="nodelet" type="nodelet" name="odom_broadcaster" machine="robot"
    args="$(arg nodelet_mode) odometry_source_plugins/OdomBroadcaster $(arg manager_name)" output="screen">
      <param name="odom_frame" value="$(arg robot_name)/odom" />
      <param name="base_frame"  value="$(arg robot_name)/base_link" />
      <param name="publish_rate"  value="1000" />
      <param name="x0" value="4.65"/>
      <param name="y0" value="0.55"/>
      <param name="yaw0" value="0"/>
      <param name="invert_x" value="false"/>
      <param name="invert_y" value="false"/>
      <remap from="odom/x" to="base/odom/x"/>
      <remap from="odom/y" to="base/odom/y"/>
      <remap from="odom/yaw" to="base/odom/yaw"/>
    </node>

    <!-- convert x-y velocity to each motor velocity -->
    <node pkg="nodelet" type="nodelet" name="base_controller" 
    args="$(arg nodelet_mode) base_controller_plugins/Omni4 $(arg manager_name)" machine="robot">
      <rosparam command="load" file="$(find pr)/config/base_controller_params.yaml" />
    </node>

    <!-- <node pkg="state" type="state.py" name="state" output="screen" machine="robot">
      <rosparam file="$(find state)/config/ds4.yaml" command="load" />
      <rosparam file="$(find pr)/config/tasks.yaml" command="load" />
      <param name="max_lin" value="0.5" />
      <param name="max_ang" value="0.5" />
      <param name="initial_pose_x" value="4.65" />
      <param name="initial_pose_y" value="0.55" />
      <param name="initial_pose_a" value="0" />
      <param name="robot_name" value="$(arg robot_name)"/>
      <remap from="cmd" to="beta/cmd" />
    </node>  -->
    <node pkg="state" type="state2.py" name="state" machine="robot" output="screen">
      <rosparam file="$(find state)/config/ds4.yaml" command="load" />
      <rosparam file="$(find robot_name)/config/tasks.yaml" command="load" />
      <param name="max_lin" value="0.5" />
      <param name="max_ang" value="0.5" />
      <param name="color" value="$(arg color)" />
      <param name="robot_name" value="$(arg robot_name)"/>
      <param name="initial_pose_x" value="$(arg x0)" />
      <param name="initial_pose_y" value="$(arg y0)" />
      <param name="initial_pose_a" value="$(arg yaw0)" />
      <remap from="cmd" to="beta/cmd" />
    </node>

    <!-- LRF -->
    <group if="$(arg lidar)">
      <node pkg="tf2_ros" type="static_transform_publisher" name="laser_link_broadcaster" args="0.395 0 0 0 0 3.14 pr/base_link pr/laser_link" machine="robot"/> 

      <!-- <node name="urg_node" pkg="urg_node" type="urg_node" machine="robot">
        <param name="ip_address" value="192.168.0.10"/>
        <param name="frame_id" value="$(arg robot_name)/laser_link"/>
        <param name="angle_min" value="-1.5"/>
        <param name="angle_max" value="1.5"/>
        <remap from="scan" to="scan"/>
      </node> -->
      <node name="urg_node" pkg="urg_node" type="urg_node" machine="robot">
        <param name="serial_port" value="/dev/sensors/hokuyo_H1323516"/>
        <param name="frame_id" value="$(arg robot_name)/laser_link"/>
        <param name="angle_min" value="-1.5"/>
        <param name="angle_max" value="1.5"/>
        <remap from="scan" to="scan"/>
      </node>

      <node pkg="map_server" type="map_server" name="map_server" args="$(find robot_control)/resources/$(arg color)/map.yaml">
        <param name="frame_id" value="$(arg robot_name)/map"/>
      </node>

      <node pkg="amcl" type="amcl" name="amcl" output="screen" machine="robot">
          <rosparam command="load" file="$(find robot_control)/config/amcl.yaml" />
          <param name="base_frame_id" value="$(arg robot_name)/base_link" />
          <param name="odom_frame_id" value="$(arg robot_name)/odom" />
          <param name="global_frame_id" value="$(arg robot_name)/map" />
      </node>
    </group>
    
    <group unless="$(arg lidar)">
      <node pkg="map_server" type="map_server" name="map_server" args="$(find robot_control)/resources/$(arg color)/map.yaml">
        <param name="frame_id" value="$(arg robot_name)/odom"/>
      </node>
    </group>

  </group>
</launch>