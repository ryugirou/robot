<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="robot_name"/>

  <arg name="x0" default="0.55"/>
  <arg name="y0" default="9.55"/>
  <arg name="yaw0" default="0"/>
  <arg name="mass" default="7"/>

  <arg name="manager_name"/>
  <arg name="nodelet_mode"/>

  <include file="$(find omni4)/config/machine/local.machine"/>
  
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		    <arg name="world_name" value="nhk2020.world"/>
    		<arg name="debug" value="false" />
    		<arg name="gui" value="true" />
    		<arg name="paused" value="false"/>
    		<arg name="use_sim_time" value="true"/>
    		<arg name="headless" value="false"/>
	</include>

  <group ns="$(arg robot_name)">

    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find robot_control)/config/4omni_control.yaml" command="load"/>
    <rosparam file="$(find robot_control)/config/sus_controller.yaml" command="load"/>
    <rosparam file="$(find robot_control)/config/joint_state_controller.yaml" command="load"/>  

    <node name="liftup_sus" pkg="robot_description" type="liftup_sus.py" respawn="false" output="screen">
       <remap from="sus0" to="sus_controller0/command" />
       <remap from="sus1" to="sus_controller1/command" />
       <remap from="sus2" to="sus_controller2/command" />
       <remap from="sus3" to="sus_controller3/command" />
     </node>

    <!-- load the controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="controller_manager" output="screen" args="spawn
     wheel0_motor_shaft_joint_controller wheel1_motor_shaft_joint_controller wheel2_motor_shaft_joint_controller wheel3_motor_shaft_joint_controller
     sus_controller0 sus_controller1 sus_controller2 sus_controller3 joint_state_controller"
     />

	  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model $(arg robot_name) -x $(arg x0) -y $(arg y0) -z 0.5 -Y $(arg yaw0)" />

    <!-- convert x-y velocity to each motor velocity -->
    <node pkg="nodelet" type="nodelet" name="base_controller" args="$(arg nodelet_mode) base_controller_plugins/Omni4 $(arg manager_name)" output="screen">
      <rosparam command="load" file="$(find omni4)/config/base_controller_params.yaml"/>
      <remap from="motor0_cmd_vel" to="wheel0_motor_shaft_joint_controller/command" />
      <remap from="motor1_cmd_vel" to="wheel1_motor_shaft_joint_controller/command" />
      <remap from="motor2_cmd_vel" to="wheel2_motor_shaft_joint_controller/command" />
      <remap from="motor3_cmd_vel" to="wheel3_motor_shaft_joint_controller/command" />
    </node>    

    <!-- publish odom -->
    <node name="gazebo_odom" pkg="robot_control" type="gazebo_odom"  output="screen">
      <param name="model_name"  value="$(arg robot_name)" />
      <param name="odom_frame" value="$(arg robot_name)/odom" />
      <param name="base_frame"  value="$(arg robot_name)/base_link" />
      <param name="publish_rate"  value="500" />
      <param name="noise"  value="0.0" />
      <param name="x_ratio"  value="1.0" />
      <param name="y_ratio"  value="1.0" />
      <param name="tf_enable" value="true" />
      <remap from="odom" to="odom" />
    </node>

    <arg name="model" default="$(find robot_description)/urdf/$(arg robot_name)/model.urdf"/>   
	  <param name="robot_description" command="$(find xacro)/xacro $(arg model) mass:=$(arg mass) --inorder"/>

    <!-- convert joint states to TF transforms for rviz, etc -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
      <param name="tf_prefix" value="$(arg robot_name)"/>
      <remap from="/joint_states" to="joint_states" />
    </node>

    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>

    <node pkg="state" type="state.py" name="state" machine="robot" output="screen">
      <rosparam file="$(find robot_control)/config/joy/ds4_usb.yaml" command="load" />
      <param name="max_lin" value="0.5" />
      <param name="max_ang" value="1" />
      <remap from="cmd" to="beta/cmd" />
    </node>

  </group>
</launch>
