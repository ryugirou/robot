<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="robot_name"/>
  <arg name="lidar"/>
  <arg name="manager_name"/>
  <arg name="nodelet_mode"/>
  <arg name="color"/>
  <arg name="map"/>
  <arg name="x0" default="0.55"/>
  <arg name="y0" default="9.55"/>
  <arg name="yaw0" default="$(eval pi/4)"/> 

  <include file="$(find tr)/config/machine/remote.machine"/>

  <group ns="$(arg robot_name)">

  <!-- Nodelet Manager -->
    <group if="$(eval nodelet_mode=='load')">
      <node pkg="nodelet" type="nodelet" name="$(arg manager_name)" args="manager" machine="robot"/>
    </group>

    <!-- CAN -->
    <node pkg="nodelet" type="nodelet" name="slcan_bridge" 
    args="$(arg nodelet_mode) can_plugins/SlcanBridge $(arg manager_name)" machine="robot"/>

    <node pkg="nodelet" type="nodelet" name="can_handler" 
    args="$(arg nodelet_mode) can_plugins/CanHandler $(arg manager_name)" machine="robot"/>

    <!--Motor Driver-->
    <node pkg="nodelet" type="nodelet" name="motor0" args="$(arg nodelet_mode) can_plugins/Md201xNode $(arg manager_name)" machine="robot">
      <param name="bid" type="string" value="52c" />
      <remap from="motor0_cmd" to="beta/cmd"/>
    </node>
    <node pkg="nodelet" type="nodelet" name="motor1" args="$(arg nodelet_mode) can_plugins/Md201xNode $(arg manager_name)" machine="robot">
      <param name="bid" type="string" value="5bc" />
      <remap from="motor1_cmd" to="beta/cmd"/>
    </node>
    <node pkg="nodelet" type="nodelet" name="motor2" args="$(arg nodelet_mode) can_plugins/Md201xNode $(arg manager_name)" machine="robot">
      <param name="bid" type="string" value="5b4" />
      <remap from="motor2_cmd" to="beta/cmd"/>
    </node>
    <node pkg="nodelet" type="nodelet" name="motor3" args="$(arg nodelet_mode) can_plugins/Md201xNode $(arg manager_name)" machine="robot">
      <param name="bid" type="string" value="4e8" />
      <remap from="motor3_cmd" to="beta/cmd"/>
    </node>
    <node pkg="nodelet" type="nodelet" name="motor4" args="$(arg nodelet_mode) can_plugins/Md201xNode $(arg manager_name)" machine="robot">
      <param name="bid" type="string" value="4f0" />
      <param name="swing" value="true"/>
      <remap from="motor4_cmd" to="beta/cmd"/>
      <remap from="motor4_cmd_val" to="kick_pos"/>
      <remap from="motor4_cmd_swing" to="kick"/>
    </node>
    <node pkg="nodelet" type="nodelet" name="motor5" args="$(arg nodelet_mode) can_plugins/Md201xNode $(arg manager_name)" machine="robot">
      <param name="bid" type="string" value="4d8" />
      <remap from="motor5_cmd" to="beta/cmd"/>
      <remap from="motor5_cmd_val" to="try"/>
      <param name="ctrl_freq" value="5" />
    </node>

    <!-- publish odom to TF -->
    <node pkg="nodelet" type="nodelet" name="odom_broadcaster" machine="robot"
    args="$(arg nodelet_mode) odometry_source_plugins/OdomBroadcaster $(arg manager_name)" output="screen">
      <param name="odom_frame" value="$(arg robot_name)/odom_link_init"/>
      <param name="base_frame"  value="$(arg robot_name)/base_link" />
      <param name="publish_rate"  value="1000" />
      <param name="invert_x" value="$(eval true if color=='blue' else false)"/>
      <param name="invert_y" value="$(eval true if color=='blue' else false)"/>
      <param name="invert_z" value="$(eval true if color=='blue' else false)"/>
      <remap from="odom/x" to="$(eval 'base/odom/y' if color=='blue' else 'base/odom/x')"/>
      <remap from="odom/y" to="$(eval 'base/odom/x' if color=='blue' else 'base/odom/y')"/>
      <remap from="odom/yaw" to="base/odom/yaw"/>
    </node>

    <node pkg="tf2_ros" type="static_transform_publisher" name="odom_link_init_broadcaster" args="$(arg x0) $(arg y0) 0 $(arg yaw0) 0 0 $(arg robot_name)/odom $(arg robot_name)/odom_link_init" machine="robot"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="odom_link_broadcaster" args="0.11389378992741898 -0.10998595445314349 0 0 0 0 $(arg robot_name)/odom_link $(arg robot_name)/base_link" machine="robot"/>

    <!-- convert x-y velocity to each motor velocity -->
    <node pkg="nodelet" type="nodelet" name="base_controller" 
    args="$(arg nodelet_mode) base_controller_plugins/Omni4 $(arg manager_name)" machine="robot">
      <rosparam command="load" file="$(find tr)/config/base_controller_params.yaml" />
      <param name="invert_x" value="$(eval true if color=='blue' else false)"/>
      <param name="invert_y" value="$(eval false if color=='blue' else true)"/>
      <param name="invert_z" value="$(eval false if color=='blue' else true)"/>
      <param name="swap_x_y" value="$(eval true if color=='blue' else false)"/>
    </node>

    <node pkg="state" type="state.py" name="state" machine="robot" output="screen">
      <rosparam file="$(find state)/config/ds4.yaml" command="load" />
      <rosparam file="$(eval find(robot_name) + '/config/tasks.yaml' )" command="load" />
      <param name="max_lin" value="0.5" />
      <param name="max_ang" value="0.5" />
      <param name="color" value="$(arg color)" />
      <param name="robot_name" value="$(arg robot_name)"/>
      <param name="initial_pose_x" value="$(arg x0)" />
      <param name="initial_pose_y" value="$(arg y0)" />
      <param name="initial_pose_a" value="$(arg yaw0)" />
      <remap from="cmd" to="beta/cmd" />
    </node>

    <!-- LRF -->
    <group if="$(eval color=='red')">
      <node pkg="tf2_ros" type="static_transform_publisher" name="laser_link_broadcaster" args="0.4 0 0 0 0 3.14 $(arg robot_name)/base_link $(arg robot_name)/laser_link" machine="robot"/>
    </group>
    <group if="$(eval color=='blue')">
      <node pkg="tf2_ros" type="static_transform_publisher" name="laser_link_broadcaster" args="0 -0.4 0 -1.57 0 0 $(arg robot_name)/base_link $(arg robot_name)/laser_link" machine="robot"/> 
    </group>
    <node name="urg_node" pkg="urg_node" type="urg_node" machine="robot">
      <param name="ip_address" value="192.168.0.10"/>
      <param name="frame_id" value="$(arg robot_name)/laser_link"/>
      <param name="angle_min" value="-1.5"/>
      <param name="angle_max" value="1.5"/>
      <remap from="scan" to="scan"/>
    </node>
    <group if="$(arg lidar)">

      <node pkg="map_server" type="map_server" name="map_server" args="$(find robot_control)/resources/$(arg map)/map.yaml">
        <param name="frame_id" value="$(arg robot_name)/map"/>
      </node>

      <node pkg="amcl" type="amcl" name="amcl" output="screen" machine="robot">
          <rosparam command="load" file="$(find robot_control)/config/amcl.yaml" />
          <param name="base_frame_id" value="$(arg robot_name)/base_link" />
          <param name="odom_frame_id" value="$(arg robot_name)/odom" />
          <param name="global_frame_id" value="$(arg robot_name)/map" />
      </node>
    </group>
    
    <group unless="$(arg lidar)">
      <node pkg="map_server" type="map_server" name="map_server" args="$(find robot_control)/resources/$(arg map)/map.yaml">
        <param name="frame_id" value="$(arg robot_name)/odom"/>
      </node>
    </group>

  </group>
</launch>