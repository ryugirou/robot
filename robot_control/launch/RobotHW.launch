<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <group ns="4omni">
    <arg name="robot_name" default="4omni"/>
    <arg name="model" default="$(find robot_description)/urdf/4omni.urdf"/>   
	  <param name="robot_description" command="$(find xacro)/xacro $(arg model)"/>

    <!-- CAN -->
	  <node name="usb_can_node" pkg="robot_control" type="usb_can_node" output="screen"/>
	  <node name="can" pkg="robot_control" type="can" output="screen"/>

    <!-- LRF -->
    <node name="urg_node" pkg="urg_node" type="urg_node" output="screen">
      <param name="ip_address" value="192.168.0.100"/>
      <param name="frame_id" value="laser_link"/>
      <remap from="scan" to="scan"/>
    </node>
   
    <!-- convert joint states to TF transforms for rviz, etc -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
      <param name="tf_prefix" value="$(arg robot_name)"/>
      <remap from="/joint_states" to="joint_states" />
    </node>

    <node name="matrixcal" pkg="robot_control" type="matrixcal.py">
        <remap from="/wheel0" to="base/motor0_cmd_vel" />
        <remap from="/wheel1" to="base/motor1_cmd_vel" />
        <remap from="/wheel2" to="base/motor2_cmd_vel" />
        <remap from="/wheel3" to="base/motor3_cmd_vel" />
        <param name="radius" value="0.038"/>
        <param name="center_to_wheel" value="0.1"/>
    </node>
  </group>
</launch>
