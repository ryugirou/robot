<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="robot_name"/>
  <arg name="wheel_radius"/>
  <arg name="robot_radius"/>
  <arg name="motor_acc"/>
  <arg name="motor_vel"/>
  <arg name="x0"/>
  <arg name="y0"/>
  <arg name="yaw0"/>

  <arg name="manager_name"/>
  <arg name="nodelet_mode"/>

  <include file="$(find robot_control)/config/machine/sim.machine"/>
  
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		    <arg name="world_name" value="nhk2020.world"/>
    		<arg name="debug" value="false" />
    		<arg name="gui" value="true" />
    		<arg name="paused" value="false"/>
    		<arg name="use_sim_time" value="true"/>
    		<arg name="headless" value="false"/>
	</include>

  <group ns="$(arg robot_name)">

    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find robot_control)/config/4omni_control.yaml" command="load"/>
    <rosparam file="$(find robot_control)/config/sus_controller.yaml" command="load"/>  
    <rosparam file="$(find robot_control)/config/joint_state_controller.yaml" command="load"/>  

    <node name="liftup_sus" pkg="robot_description" type="liftup_sus.py" respawn="false" output="screen">
       <remap from="sus0" to="sus_controller0/command" />
       <remap from="sus1" to="sus_controller1/command" />
       <remap from="sus2" to="sus_controller2/command" />
       <remap from="sus3" to="sus_controller3/command" />
     </node>

    <!-- load the controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="controller_manager" output="screen" args="spawn
     wheel0_motor_shaft_joint_controller wheel1_motor_shaft_joint_controller wheel2_motor_shaft_joint_controller wheel3_motor_shaft_joint_controller
     sus_controller0 sus_controller1 sus_controller2 sus_controller3 joint_state_controller"
     />

	  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model $(arg robot_name) -x $(arg x0) -y $(arg y0) -z 0.5 -Y $(arg yaw0)" />

    <!-- convert x-y velocity to each motor velocity -->
    <node pkg="nodelet" type="nodelet" name="base_controller" args="$(arg nodelet_mode) base_controller_plugins/Omni4 $(arg manager_name)" output="screen">
      <param name="motor_max_acc" value="$(arg motor_acc)" />
      <param name="motor_max_vel" value="$(arg motor_vel)" />
      <param name="invert_x" value="true" />
      <param name="invert_y" value="false" />
      <param name="invert_z" value="false" />
      <param name="robot_radius" value="$(arg robot_radius)" />
      <param name="wheel_radius" value="$(arg wheel_radius)" />
      <remap from="motor0_cmd_vel" to="wheel0_motor_shaft_joint_controller/command" />
      <remap from="motor1_cmd_vel" to="wheel1_motor_shaft_joint_controller/command" />
      <remap from="motor2_cmd_vel" to="wheel2_motor_shaft_joint_controller/command" />
      <remap from="motor3_cmd_vel" to="wheel3_motor_shaft_joint_controller/command" />
    </node>    

 
    <!-- publish odom -->
    <node name="gazebo_odom" pkg="robot_control" type="gazebo_odom"  output="screen">
      <param name="model_name"  value="$(arg robot_name)" />
      <param name="odom_frame" value="$(arg robot_name)/odom" />
      <param name="base_frame"  value="$(arg robot_name)/odom_link" />
      <param name="publish_rate"  value="200" />
      <param name="noise"  value="0.0" />
      <param name="x_ratio"  value="1.0" />
      <param name="y_ratio"  value="1.0" />
      <param name="tf_enable" value="true" />
      <remap from="odom" to="odom" />
    </node>

  </group>

  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find robot_control)/config/SETTING.rviz">
    <remap from="/move_base_simple/goal" to="/$(arg robot_name)/move_base_simple/goal"/>
  </node>
</launch>
