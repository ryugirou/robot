<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="manager_name" default="nodelet_manager" />
  <arg name="nodelet_mode" default="load" /><!-- set to standalone if you want to use as node-->
  <arg name="lidar" default="true"/>
  <arg name="debug" default="true"/>
  <arg name="robot_name" default="omni4"/>

  <include file="$(eval find(robot_name) + '/launch/RobotHW.launch' )">
    <arg name="manager_name" value="$(arg manager_name)" />
    <arg name="nodelet_mode" value="$(arg nodelet_mode)" />
    <arg name="robot_name" value="$(arg robot_name)"/>
    <arg name="lidar" value="$(arg lidar)"/>
  </include>
  

  <group ns="$(arg robot_name)">

    <node pkg="ds4_driver" type="ds4_driver_node.py" name="ds4_driver" output="screen" machine="robot">
      <rosparam command="load" file="$(find ds4_driver)/config/params.yaml" />
      <param name="device_addr" value="" />
      <param name="use_standard_msgs" value="true" />
    </node>

    <node pkg="navigation" type="trajectory_tracking2" name="trajectory_tracking2" machine="robot">
      <param name="map_frame_id" value="$(arg robot_name)/map" />
      <param name="odom_frame_id" value="$(arg robot_name)/odom" />
      <param name="base_frame_id"  value="$(arg robot_name)/base_link" />
      <rosparam command="load" file="$(eval find(robot_name) + '/config/trajectory_tracking.yaml' )" />
    </node>

  </group>

  <!-- Debug 6190-->
  <group if="$(arg debug)">
    <include file="$(find robot_control)/launch/debug.launch">
      <arg name="robot_name" value="$(arg robot_name)"/>
    </include>
  </group>
 
</launch>
