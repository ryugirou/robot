<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="manager_name" default="nodelet_manager" />
  <arg name="nodelet_mode" default="load" /><!-- set to standalone if you want to use as node-->
  <arg name="lidar" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="robot_name" default="omni4"/>
  <arg name="color" default="red"/>

  <!-- Debug -->
  <group if="$(arg debug)">
    <include file="$(find robot_control)/launch/debug.launch">
      <arg name="robot_name" value="$(arg robot_name)"/>
    </include>
  </group>

  <include file="$(eval find(robot_name) + '/launch/RobotHW.launch' )">
    <arg name="manager_name" value="$(arg manager_name)" />
    <arg name="nodelet_mode" value="$(arg nodelet_mode)" />
    <arg name="robot_name" value="$(arg robot_name)"/>
    <arg name="lidar" value="$(arg lidar)"/>
    <arg name="color" value="$(arg color)"/>
  </include>

  <group ns="$(arg robot_name)">
    <!-- <arg name="model" default="$(find robot_description)/urdf/$(arg robot_name)/model.urdf"/>   
	  <param name="robot_description" command="$(find xacro)/xacro $(arg model) 
      mass:=$(arg mass)"/> -->

    <!-- convert joint states to TF transforms for rviz, etc -->
    <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen" machine="robot">
      <param name="tf_prefix" value="$(arg robot_name)"/>
      <remap from="/joint_states" to="joint_states" />
    </node>

    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" machine="robot"/> -->

	  <!-- <node name="joy_node" pkg="joy" type="joy_node" machine="robot"/>  -->

    <node pkg="ds4_driver" type="ds4_driver_node.py" name="ds4_driver" output="screen" machine="robot">
      <rosparam command="load" file="$(find ds4_driver)/config/params.yaml" />
      <param name="device_addr" value="" />
      <param name="use_standard_msgs" value="true" />
      <param name="deadzone" value="0.1"/>
    </node>   
  </group> 
</launch>
